CURRENT
- Test that if a chunk has "request" instead of content, displaying it will jump forward until it finds something with content.


TODO
- Factor Display out of StoryAssembler (shouldn't depend on it)
- Implement "order" and "mandatory" properties for wishlists.
- Fix commented out choiceDetails printing (two places)
- Possible bug in the case where we're recursing to find a subgoal that's the same as one of our wishlist goals. [Think about what happens in this case.]

Future:

- Replace flat max_depth with a dynamic heuristic that stops searching any path that has gone more than N nodes without satisfying a Want from the wishlist. (Ben's idea.)
- Figure out a way to allow comments in data format. (i.e. not raw json)
- Basic editor for JSON
- What about chunks being reused
- ALlow commentsi n JSON
- Research in unit tests: how to test properties of an object? If you check directly, it'll crash with a "cannot read property x of y." If you check that the object exists first, it just adds a failing test before the crash.
- If you have a chunk with a request (instead of content) which changes the conditions such that the original chunk matching that request can no longer appear, the system will show it anyway, when what it should do is some kind of replan (which might not find a matching chunk).
- When recursing down, should flag as an error if we have a chunk with choices that requests a chunk w/choices (or requests a chunk that requests a chunk w/choices, etc.)


Done:
- Implement a max_depth to speed up BestPath
- ON-screen debugging showing current wishlist, possibly chunk library too.
