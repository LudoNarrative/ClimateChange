CURRENT
- Implement heuristic/max depth to speed up BestPath.
	- First implement simple max-depth to see if solves slow-down
	- Then implement heuristic to make this better/more dynamic.

	heuristic of (skip N), where as you're searching, you prune any paths where you have gone N nodes without satisfying a Want from the wishlist.
		- Means you can't have long chains leading to wishlist items (unless you have a flag that allows?) but speeds up your time a lot.
		- also a max-depth. 
		- also, either/both could be dynamic based on time (i.e. best you've found after 2 seconds)
		- investigate rete nets. 


TODO
- Factor Display out of StoryAssembler (shouldn't depend on it)
- Implement "order" and "mandatory" properties for wishlists.
- ON-screen debugging showing current wishlist, possibly chunk library too.
- Test that if a chunk has "request" instead of content, displaying it will jump forward until it finds something with content.
- Fix commented out choiceDetails printing (two places)

Future:

- Figure out a way to allow comments in data format. (i.e. not raw json)
- Basic editor for JSON
- What about chunks being reused
- ALlow commentsi n JSON
- Research in unit tests: how to test properties of an object? If you check directly, it'll crash with a "cannot read property x of y." If you check that the object exists first, it just adds a failing test before the crash.