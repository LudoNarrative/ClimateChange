entity(ball).
entity(square).
entity(face).
singular(ball).
singular(square).
singular(face).
resource(confidence).
physicsLogic(ball,spring).
overlapLogic(ball,square).
controlLogic(mouse_button).
modeLogic(playing).
modeLogic(game_loss).
initialize(set_to(confidence,50)).
initialize(set_sprite(ball,circle)).
initialize(set_color(ball,light_grey)).
initialize(set_depth(ball,front)).
initialize(set_sprite(square,square)).
initialize(set_color(square,dark_grey)).
initialize(set_depth(square,back)).
initialize(set_sprite(face,anxious_face)).
initialize(set_depth(face,front)).
precondition(lt(confidence,50),bad_face).
result(bad_face,set_sprite(face,upset_face)).
precondition(lt(confidence,100),neutral_face).
precondition(ge(confidence,50),neutral_face).
result(neutral_face,set_sprite(face,anxious_face)).
precondition(ge(confidence,100),good_face).
result(good_face,set_sprite(face,happy_face)).
precondition(tick,drain).
result(drain,decreases(confidence,frac(1,600))).
precondition(control_event(pressed(mouse_button)),gain).
precondition(overlaps(ball,square,true),gain).
result(gain,increases(confidence,10)).
result(gain,change_color(square,green,16)).
precondition(control_event(pressed(mouse_button)),loss).
precondition(overlaps(ball,square,false),loss).
result(loss,decreases(confidence,10)).
result(loss,change_color(square,red,16)).
precondition(le(confidence,0),lose).
result(lose,mode_change(game_loss)).
good_result(mode_change(game_win)).
bad_result(mode_change(game_end)).
bad_result(mode_change(game_loss)).
unrestrictedCondition(tick).
timingBasedPhysics(spring).
timingBasedPhysics(pendulum).
timingBasedPhysics(chase).
timingBasedPhysics(random).
timingBasedPhysics(random_chase).
timingBasedPhysics(flee).
timingBasedPhysics(random_flee).
threshold(mid).
threshold(high).
threshold(low).
threshold(confidence).
low_threshold(lt(confidence,mid),confidence).
low_threshold(lt(confidence,high),confidence).
low_threshold(lt(confidence,low),confidence).
low_threshold(lt(confidence,confidence),confidence).
low_threshold(le(confidence,mid),confidence).
low_threshold(le(confidence,high),confidence).
low_threshold(le(confidence,low),confidence).
low_threshold(le(confidence,confidence),confidence).
high_threshold(gt(confidence,mid),confidence).
high_threshold(gt(confidence,high),confidence).
high_threshold(gt(confidence,low),confidence).
high_threshold(gt(confidence,confidence),confidence).
high_threshold(ge(confidence,mid),confidence).
high_threshold(ge(confidence,high),confidence).
high_threshold(ge(confidence,low),confidence).
high_threshold(ge(confidence,confidence),confidence).
requiredBy(gain,ball).
requiredBy(loss,ball).
requiredBy(gain,square).
requiredBy(loss,square).
enables(drain,bad_face).
enables(drain,neutral_face).
enables(loss,bad_face).
enables(loss,neutral_face).
enables(drain,lose).
enables(loss,lose).
enables(gain,neutral_face).
enables(gain,good_face).
goal(prevent(lose)).
hinders(gain,bad_face).
hinders(gain,neutral_face).
hinders(gain,lose).
hinders(drain,neutral_face).
hinders(drain,good_face).
hinders(loss,neutral_face).
hinders(loss,good_face).
goal(maintain(confidence)).
good(confidence).
outcomeUnfavorable(lose).
outcomeUnfavorable(drain).
outcomeUnfavorable(loss).
condition(lt(confidence,50)).
condition(lt(confidence,100)).
condition(ge(confidence,50)).
condition(ge(confidence,100)).
condition(tick).
condition(control_event(pressed(mouse_button))).
condition(overlaps(ball,square,true)).
condition(overlaps(ball,square,false)).
condition(le(confidence,0)).
outcome(bad_face).
outcome(neutral_face).
outcome(good_face).
outcome(drain).
outcome(gain).
outcome(loss).
outcome(lose).
moreThanOnePrecondition(neutral_face).
moreThanOnePrecondition(gain).
moreThanOnePrecondition(loss).
onlyOnePrecondition(bad_face).
onlyOnePrecondition(good_face).
onlyOnePrecondition(drain).
onlyOnePrecondition(lose).
worseWithTime(confidence).
playerActionHelps(pressed(mouse_button),confidence).
playerActionHurts(pressed(mouse_button),confidence).
playerActionAffects(pressed(mouse_button),confidence).
timingAffectsEntity(ball).
result_enables_condition(increase(confidence),gt(confidence,mid)).
result_enables_condition(increase(confidence),gt(confidence,high)).
result_enables_condition(increase(confidence),gt(confidence,low)).
result_enables_condition(increase(confidence),gt(confidence,confidence)).
result_enables_condition(increase(confidence),ge(confidence,mid)).
result_enables_condition(increase(confidence),ge(confidence,high)).
result_enables_condition(increase(confidence),ge(confidence,low)).
result_enables_condition(increase(confidence),ge(confidence,confidence)).
result_enables_condition(decrease(confidence),lt(confidence,mid)).
result_enables_condition(decrease(confidence),lt(confidence,high)).
result_enables_condition(decrease(confidence),lt(confidence,low)).
result_enables_condition(decrease(confidence),lt(confidence,confidence)).
result_enables_condition(decrease(confidence),le(confidence,mid)).
result_enables_condition(decrease(confidence),le(confidence,high)).
result_enables_condition(decrease(confidence),le(confidence,low)).
result_enables_condition(decrease(confidence),le(confidence,confidence)).
outcome_enables(bad_face,set_sprite(face,upset_face)).
outcome_enables(neutral_face,set_sprite(face,anxious_face)).
outcome_enables(good_face,set_sprite(face,happy_face)).
outcome_enables(drain,decreases(confidence,frac(1,600))).
outcome_enables(gain,increases(confidence,10)).
outcome_enables(gain,change_color(square,green,16)).
outcome_enables(loss,decreases(confidence,10)).
outcome_enables(loss,change_color(square,red,16)).
outcome_enables(lose,mode_change(game_loss)).
condition_enables(lt(confidence,50),bad_face).
condition_enables(lt(confidence,100),neutral_face).
condition_enables(ge(confidence,50),neutral_face).
condition_enables(ge(confidence,100),good_face).
condition_enables(tick,drain).
condition_enables(control_event(pressed(mouse_button)),gain).
condition_enables(overlaps(ball,square,true),gain).
condition_enables(control_event(pressed(mouse_button)),loss).
condition_enables(overlaps(ball,square,false),loss).
condition_enables(le(confidence,0),lose).
condition_enables(tick,bad_face).
condition_enables(tick,neutral_face).
condition_enables(tick,lose).
condition_enables(control_event(pressed(mouse_button)),neutral_face).
condition_enables(control_event(pressed(mouse_button)),good_face).
condition_enables(overlaps(ball,square,true),neutral_face).
condition_enables(overlaps(ball,square,true),good_face).
condition_enables(control_event(pressed(mouse_button)),bad_face).
condition_enables(control_event(pressed(mouse_button)),lose).
condition_enables(overlaps(ball,square,false),bad_face).
condition_enables(overlaps(ball,square,false),neutral_face).
condition_enables(overlaps(ball,square,false),lose).
goal(relates(lose)).
restrictedEntity(ball).
restrictedEntity(square).
restrictedEntity(face).
restrictedCondition(overlaps(ball,square,true)).
restrictedCondition(overlaps(ball,square,false)).
nonMonotonic(confidence).
unrestricted(bad_face):-not restricted(bad_face).
unrestricted(neutral_face):-not restricted(neutral_face).
unrestricted(good_face):-not restricted(good_face).
unrestricted(drain):-not restricted(drain).
unrestricted(gain):-not restricted(gain).
unrestricted(loss):-not restricted(loss).
unrestricted(lose):-not restricted(lose).
restricted(bad_face):-not unrestrictedCondition(lt(confidence,50)).
restricted(neutral_face):-not unrestrictedCondition(lt(confidence,100)).
restricted(neutral_face):-not unrestrictedCondition(ge(confidence,50)).
restricted(good_face):-not unrestrictedCondition(ge(confidence,100)).
restricted(gain):-not unrestrictedCondition(control_event(pressed(mouse_button))).
restricted(gain):-not unrestrictedCondition(overlaps(ball,square,true)).
restricted(loss):-not unrestrictedCondition(control_event(pressed(mouse_button))).
restricted(loss):-not unrestrictedCondition(overlaps(ball,square,false)).
restricted(lose):-not unrestrictedCondition(le(confidence,0)).
easy(bad_face):-unrestricted(bad_face).
easy(neutral_face):-unrestricted(neutral_face).
easy(good_face):-unrestricted(good_face).
easy(drain):-unrestricted(drain).
easy(gain):-unrestricted(gain).
easy(loss):-unrestricted(loss).
easy(lose):-unrestricted(lose).
easy(loss).
gradual(drain).
gradual(bad_face).
gradual(neutral_face).
gradual(lose).
amount(10).
amount(frac(1,600)).
replenishible(confidence).
playerCreatesCondition(control_event(pressed(mouse_button))).
playerInfluences(gain).
playerInfluences(loss).
