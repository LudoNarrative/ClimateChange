clingo version 4.5.4
Reading from rules-mk3.lp ...
Solving...
Answer: 1
entity(ball) entity(square) entity(face) singular(ball) singular(square)
singular(face) resource(confidence) physicsLogic(ball,spring)
overlapLogic(ball,square) controlLogic(mouse_button) modeLogic(playing)
modeLogic(game_loss) initialize(set_to(confidence,50))
initialize(set_sprite(ball,circle)) initialize(set_color(ball,light_grey))
initialize(set_depth(ball,front)) initialize(set_sprite(square,square))
initialize(set_color(square,dark_grey)) initialize(set_depth(square,back))
initialize(set_sprite(face,anxious_face)) initialize(set_depth(face,front))
precondition(lt(confidence,50),bad_face)
result(bad_face,set_sprite(face,upset_face))
precondition(lt(confidence,100),neutral_face)
precondition(ge(confidence,50),neutral_face)
result(neutral_face,set_sprite(face,anxious_face))
precondition(ge(confidence,100),good_face)
result(good_face,set_sprite(face,happy_face)) precondition(tick,drain)
result(drain,decrease(confidence,frac(1,600)))
precondition(control_event(pressed(mouse_button)),gain)
precondition(overlaps(ball,square,true),gain)
result(gain,increase(confidence,10))
result(gain,change_color(square,green,16))
precondition(control_event(pressed(mouse_button)),loss)
precondition(overlaps(ball,square,false),loss)
result(loss,decrease(confidence,10))
result(loss,change_color(square,red,16))
precondition(le(confidence,0),lose) result(lose,mode_change(game_loss))
oppositeSides(screen_top,screen_bottom)
oppositeSides(screen_left,screen_right) goodResult(mode_change(game_win))
badResult(mode_change(game_end)) badResult(mode_change(game_loss))
unrestrictedCondition(tick) screen(screen_top) screen(screen_left)
screen(screen_bottom) screen(screen_right) timingBasedPhysics(spring)
timingBasedPhysics(pendulum) timingBasedPhysics(chase)
timingBasedPhysics(random) timingBasedPhysics(random_chase)
timingBasedPhysics(flee) timingBasedPhysics(random_flee) threshold(0)
threshold(mid) threshold(high) threshold(low) condition(lt(confidence,50))
condition(lt(confidence,100)) condition(ge(confidence,50))
condition(ge(confidence,100)) condition(tick)
condition(control_event(pressed(mouse_button)))
condition(overlaps(ball,square,true))
condition(overlaps(ball,square,false)) condition(le(confidence,0))
learnedCondition(lt(confidence,50)) learnedCondition(lt(confidence,100))
learnedCondition(ge(confidence,50)) learnedCondition(ge(confidence,100))
learnedCondition(tick)
learnedCondition(control_event(pressed(mouse_button)))
learnedCondition(overlaps(ball,square,true))
learnedCondition(overlaps(ball,square,false))
learnedCondition(le(confidence,0))
implies(lt(confidence,50),lt(confidence,50))
implies(lt(confidence,100),lt(confidence,100))
implies(ge(confidence,50),ge(confidence,50))
implies(ge(confidence,100),ge(confidence,100)) implies(tick,tick)
implies(control_event(pressed(mouse_button)),control_event(pressed(mouse_button)))
implies(overlaps(ball,square,true),overlaps(ball,square,true))
implies(overlaps(ball,square,false),overlaps(ball,square,false))
implies(le(confidence,0),le(confidence,0)) goal(prevent(lose))
requiredBy(gain,ball) requiredBy(loss,ball) requiredBy(gain,square)
requiredBy(loss,square) threshold(confidence)
lowThreshold(lt(confidence,0),confidence,0)
lowThreshold(lt(confidence,mid),confidence,mid)
lowThreshold(lt(confidence,high),confidence,high)
lowThreshold(lt(confidence,low),confidence,low)
lowThreshold(lt(confidence,confidence),confidence,confidence)
lowThreshold(le(confidence,0),confidence,0)
lowThreshold(le(confidence,mid),confidence,mid)
lowThreshold(le(confidence,high),confidence,high)
lowThreshold(le(confidence,low),confidence,low)
lowThreshold(le(confidence,confidence),confidence,confidence)
highThreshold(gt(confidence,0),confidence,0)
highThreshold(gt(confidence,mid),confidence,mid)
highThreshold(gt(confidence,high),confidence,high)
highThreshold(gt(confidence,low),confidence,low)
highThreshold(gt(confidence,confidence),confidence,confidence)
highThreshold(ge(confidence,0),confidence,0)
highThreshold(ge(confidence,mid),confidence,mid)
highThreshold(ge(confidence,high),confidence,high)
highThreshold(ge(confidence,low),confidence,low)
highThreshold(ge(confidence,confidence),confidence,confidence)
result_enables_condition(increase(confidence),gt(confidence,0))
result_enables_condition(increase(confidence),gt(confidence,mid))
result_enables_condition(increase(confidence),gt(confidence,high))
result_enables_condition(increase(confidence),gt(confidence,low))
result_enables_condition(increase(confidence),gt(confidence,confidence))
result_enables_condition(increase(confidence),ge(confidence,0))
result_enables_condition(increase(confidence),ge(confidence,mid))
result_enables_condition(increase(confidence),ge(confidence,high))
result_enables_condition(increase(confidence),ge(confidence,low))
result_enables_condition(increase(confidence),ge(confidence,confidence))
result_enables_condition(decrease(confidence),lt(confidence,0))
result_enables_condition(decrease(confidence),lt(confidence,mid))
result_enables_condition(decrease(confidence),lt(confidence,high))
result_enables_condition(decrease(confidence),lt(confidence,low))
result_enables_condition(decrease(confidence),lt(confidence,confidence))
result_enables_condition(decrease(confidence),le(confidence,0))
result_enables_condition(decrease(confidence),le(confidence,mid))
result_enables_condition(decrease(confidence),le(confidence,high))
result_enables_condition(decrease(confidence),le(confidence,low))
result_enables_condition(decrease(confidence),le(confidence,confidence))
result_enables(decrease(confidence),lose)
outcome_enablesN(bad_face,set_sprite(face,upset_face),0)
outcome_enablesN(neutral_face,set_sprite(face,anxious_face),0)
outcome_enablesN(good_face,set_sprite(face,happy_face),0)
outcome_enablesN(drain,decrease(confidence,frac(1,600)),0)
outcome_enablesN(gain,increase(confidence,10),0)
outcome_enablesN(gain,change_color(square,green,16),0)
outcome_enablesN(loss,decrease(confidence,10),0)
outcome_enablesN(loss,change_color(square,red,16),0)
outcome_enablesN(lose,mode_change(game_loss),0)
outcome_enables(bad_face,set_sprite(face,upset_face))
outcome_enables(neutral_face,set_sprite(face,anxious_face))
outcome_enables(good_face,set_sprite(face,happy_face))
outcome_enables(drain,decrease(confidence,frac(1,600)))
outcome_enables(gain,increase(confidence,10))
outcome_enables(gain,change_color(square,green,16))
outcome_enables(loss,decrease(confidence,10))
outcome_enables(loss,change_color(square,red,16))
outcome_enables(lose,mode_change(game_loss)) hinders(gain,bad_face)
hinders(gain,neutral_face) hinders(gain,lose) hinders(drain,neutral_face)
hinders(drain,good_face) hinders(loss,neutral_face) hinders(loss,good_face)
goal(maintain(confidence)) good(confidence)
outcomeAffects(confidence,gain,positive)
outcomeAffects(confidence,drain,negative)
outcomeAffects(confidence,loss,negative) outcome(bad_face)
outcome(neutral_face) outcome(good_face) outcome(drain) outcome(gain)
outcome(loss) outcome(lose) onlyOnePrecondition(bad_face)
onlyOnePrecondition(good_face) onlyOnePrecondition(drain)
onlyOnePrecondition(lose) needsLow(lose,confidence)
badResult(decrease(confidence,frac(1,600)))
badResult(decrease(confidence,10)) outcomeFavorable(gain)
outcomeUnfavorable(lose) goodResult(increase(confidence,10))
outcomeUnfavorable(drain) outcomeUnfavorable(loss)
oppositeSides(screen_bottom,screen_top)
oppositeSides(screen_right,screen_left)
lhThreshold(lt(confidence,0),confidence,0)
lhThreshold(lt(confidence,mid),confidence,mid)
lhThreshold(lt(confidence,high),confidence,high)
lhThreshold(lt(confidence,low),confidence,low)
lhThreshold(lt(confidence,confidence),confidence,confidence)
lhThreshold(le(confidence,0),confidence,0)
lhThreshold(le(confidence,mid),confidence,mid)
lhThreshold(le(confidence,high),confidence,high)
lhThreshold(le(confidence,low),confidence,low)
lhThreshold(le(confidence,confidence),confidence,confidence)
lhThreshold(gt(confidence,0),confidence,0)
lhThreshold(gt(confidence,mid),confidence,mid)
lhThreshold(gt(confidence,high),confidence,high)
lhThreshold(gt(confidence,low),confidence,low)
lhThreshold(gt(confidence,confidence),confidence,confidence)
lhThreshold(ge(confidence,0),confidence,0)
lhThreshold(ge(confidence,mid),confidence,mid)
lhThreshold(ge(confidence,high),confidence,high)
lhThreshold(ge(confidence,low),confidence,low)
lhThreshold(ge(confidence,confidence),confidence,confidence)
resourceAffects(confidence,lose) moreThanOnePrecondition(neutral_face)
moreThanOnePrecondition(gain) moreThanOnePrecondition(loss)
worseWithTime(confidence)
playerActionHelps(pressed(mouse_button),confidence)
playerActionHurts(pressed(mouse_button),confidence)
playerActionAffects(pressed(mouse_button),confidence)
actionHasRiskReward(pressed(mouse_button))
actionNeededForMaintenance(pressed(mouse_button),confidence)
timingAffectsEntity(ball)
timingAffectsAction(control_event(pressed(mouse_button)))
timingChallenge(control_event(pressed(mouse_button)))
conditionEnablesN(lt(confidence,50),bad_face,0)
conditionEnablesN(lt(confidence,100),neutral_face,0)
conditionEnablesN(ge(confidence,50),neutral_face,0)
conditionEnablesN(ge(confidence,100),good_face,0)
conditionEnablesN(tick,drain,0)
conditionEnablesN(control_event(pressed(mouse_button)),gain,0)
conditionEnablesN(overlaps(ball,square,true),gain,0)
conditionEnablesN(control_event(pressed(mouse_button)),loss,0)
conditionEnablesN(overlaps(ball,square,false),loss,0)
conditionEnablesN(le(confidence,0),lose,0)
conditionEnables(lt(confidence,50),bad_face)
conditionEnables(lt(confidence,100),neutral_face)
conditionEnables(ge(confidence,50),neutral_face)
conditionEnables(ge(confidence,100),good_face) conditionEnables(tick,drain)
conditionEnables(control_event(pressed(mouse_button)),gain)
conditionEnables(overlaps(ball,square,true),gain)
conditionEnables(control_event(pressed(mouse_button)),loss)
conditionEnables(overlaps(ball,square,false),loss)
conditionEnables(le(confidence,0),lose)
playerCreatesCondition(control_event(pressed(mouse_button)))
playerWillDo(control_event(pressed(mouse_button)),gain)
nonMonotonic(confidence) goal(relates(lose)) restrictedEntity(ball)
restrictedEntity(square) restrictedEntity(face)
restrictedCondition(overlaps(ball,square,true))
restrictedCondition(overlaps(ball,square,false)) restricted(bad_face)
restricted(neutral_face) restricted(good_face) unrestricted(drain)
restricted(gain) restricted(loss) restricted(lose) easy(drain) easy(loss)
gradual(drain) amount(10) amount(frac(1,600)) replenishible(confidence)
playerInfluences(gain) playerInfluences(loss) systemInfluences(bad_face)
systemInfluences(neutral_face) systemInfluences(good_face)
systemInfluences(drain) systemInfluences(gain) systemInfluences(loss)
systemInfluences(lose) SATISFIABLE

Models       : 1     
Calls        : 1
Time         : 0.032s (Solving: 0.00s 1st Model: 0.00s Unsat: 0.00s)
CPU Time     : 0.030s
