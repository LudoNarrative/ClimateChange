clingo version 4.5.4
Reading from snake.lp ...
Solving...
Answer: 1
oppositeSides(screen_top,screen_bottom)
oppositeSides(screen_left,screen_right) goodResult(mode_change(game_win))
badResult(mode_change(game_end)) badResult(mode_change(game_loss))
unrestrictedCondition(tick) entity(snake) singular(snake)
resource(property(snake,length)) resource(score) goal(gain(score)) dir(up)
dir(down) dir(left) dir(right) initialize(set(snake,trajectory(left)))
entity(food) precondition(collide(snake,snake),collide_with_self)
result(collide_with_self,mode_change(game_loss))
precondition(collide(snake,wall),collide_with_wall)
result(collide_with_wall,mode_change(game_loss))
precondition(collide(snake,food),eat)
result(eat,increase(property(snake,length),low))
result(eat,increase(score,low)) result(eat,delete(food)) screen(screen_top)
screen(screen_left) screen(screen_bottom) screen(screen_right)
timingBasedPhysics(spring) timingBasedPhysics(pendulum)
timingBasedPhysics(chase) timingBasedPhysics(random)
timingBasedPhysics(random_chase) timingBasedPhysics(flee)
timingBasedPhysics(random_flee) threshold(0) threshold(mid) threshold(high)
threshold(low) precondition(absent(food),add_food(up))
precondition(absent(food),add_food(down))
precondition(absent(food),add_food(left))
precondition(absent(food),add_food(right)) precondition(tick,move(up))
precondition(tick,move(down)) precondition(tick,move(left))
precondition(tick,move(right))
precondition(set(snake,trajectory(up)),move(up))
precondition(set(snake,trajectory(down)),move(down))
precondition(set(snake,trajectory(left)),move(left))
precondition(set(snake,trajectory(right)),move(right))
precondition(control_event(arrow(up)),turn(up))
precondition(control_event(arrow(down)),turn(down))
precondition(control_event(arrow(left)),turn(left))
precondition(control_event(arrow(right)),turn(right))
condition(collide(snake,snake)) condition(collide(snake,wall))
condition(collide(snake,food)) condition(absent(food)) condition(tick)
condition(set(snake,trajectory(up))) condition(set(snake,trajectory(down)))
condition(set(snake,trajectory(left)))
condition(set(snake,trajectory(right))) condition(control_event(arrow(up)))
condition(control_event(arrow(down))) condition(control_event(arrow(left)))
condition(control_event(arrow(right)))
implies(collide(snake,snake),overlaps(snake,snake))
implies(collide(snake,wall),overlaps(snake,wall))
implies(collide(snake,food),overlaps(snake,food))
learnedCondition(collide(snake,snake))
learnedCondition(collide(snake,wall)) learnedCondition(collide(snake,food))
learnedCondition(absent(food)) learnedCondition(tick)
learnedCondition(set(snake,trajectory(up)))
learnedCondition(set(snake,trajectory(down)))
learnedCondition(set(snake,trajectory(left)))
learnedCondition(set(snake,trajectory(right)))
learnedCondition(control_event(arrow(up)))
learnedCondition(control_event(arrow(down)))
learnedCondition(control_event(arrow(left)))
learnedCondition(control_event(arrow(right)))
implies(collide(snake,snake),collide(snake,snake))
implies(collide(snake,wall),collide(snake,wall))
implies(collide(snake,food),collide(snake,food))
implies(absent(food),absent(food)) implies(tick,tick)
implies(set(snake,trajectory(up)),set(snake,trajectory(up)))
implies(set(snake,trajectory(down)),set(snake,trajectory(down)))
implies(set(snake,trajectory(left)),set(snake,trajectory(left)))
implies(set(snake,trajectory(right)),set(snake,trajectory(right)))
implies(control_event(arrow(up)),control_event(arrow(up)))
implies(control_event(arrow(down)),control_event(arrow(down)))
implies(control_event(arrow(left)),control_event(arrow(left)))
implies(control_event(arrow(right)),control_event(arrow(right)))
learnedCondition(overlaps(snake,snake))
learnedCondition(overlaps(snake,wall))
learnedCondition(overlaps(snake,food))
implies(overlaps(snake,snake),present(snake))
implies(overlaps(snake,wall),present(wall))
implies(overlaps(snake,food),present(food))
implies(overlaps(snake,wall),present(snake))
implies(overlaps(snake,food),present(snake))
implies(collide(snake,snake),present(snake))
implies(collide(snake,wall),present(wall))
implies(collide(snake,food),present(food))
implies(collide(snake,wall),present(snake))
implies(collide(snake,food),present(snake))
learnedCondition(present(snake)) learnedCondition(present(wall))
learnedCondition(present(food)) negates(delete(food),present(food))
inhibits(delete(food),overlaps(snake,food))
inhibits(delete(food),collide(snake,food)) result_hinders(delete(food),eat)
result(add_food(up),add(food)) result(add_food(down),add(food))
result(add_food(left),add(food)) result(add_food(right),add(food))
result(add_food(up),dir_from(snake,up,food))
result(add_food(down),dir_from(snake,down,food))
result(add_food(left),dir_from(snake,left,food))
result(add_food(right),dir_from(snake,right,food))
result(move(snake,up),moves(snake,up,low))
result(move(snake,down),moves(snake,down,low))
result(move(snake,left),moves(snake,left,low))
result(move(snake,right),moves(snake,right,low))
result(turn(up),set_to(snake,trajectory(up)))
result(turn(down),set_to(snake,trajectory(down)))
result(turn(left),set_to(snake,trajectory(left)))
result(turn(right),set_to(snake,trajectory(right)))
notImmediatelyRepeatable(eat) goal(prevent(collide_with_self))
goal(prevent(collide_with_wall)) threshold(property(snake,length))
threshold(score)
lowThreshold(lt(property(snake,length),0),property(snake,length),0)
lowThreshold(lt(property(snake,length),mid),property(snake,length),mid)
lowThreshold(lt(property(snake,length),high),property(snake,length),high)
lowThreshold(lt(property(snake,length),low),property(snake,length),low)
lowThreshold(lt(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
lowThreshold(lt(property(snake,length),score),property(snake,length),score)
lowThreshold(lt(score,0),score,0) lowThreshold(lt(score,mid),score,mid)
lowThreshold(lt(score,high),score,high)
lowThreshold(lt(score,low),score,low)
lowThreshold(lt(score,property(snake,length)),score,property(snake,length))
lowThreshold(lt(score,score),score,score)
lowThreshold(le(property(snake,length),0),property(snake,length),0)
lowThreshold(le(property(snake,length),mid),property(snake,length),mid)
lowThreshold(le(property(snake,length),high),property(snake,length),high)
lowThreshold(le(property(snake,length),low),property(snake,length),low)
lowThreshold(le(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
lowThreshold(le(property(snake,length),score),property(snake,length),score)
lowThreshold(le(score,0),score,0) lowThreshold(le(score,mid),score,mid)
lowThreshold(le(score,high),score,high)
lowThreshold(le(score,low),score,low)
lowThreshold(le(score,property(snake,length)),score,property(snake,length))
lowThreshold(le(score,score),score,score)
highThreshold(gt(property(snake,length),0),property(snake,length),0)
highThreshold(gt(property(snake,length),mid),property(snake,length),mid)
highThreshold(gt(property(snake,length),high),property(snake,length),high)
highThreshold(gt(property(snake,length),low),property(snake,length),low)
highThreshold(gt(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
highThreshold(gt(property(snake,length),score),property(snake,length),score)
highThreshold(gt(score,0),score,0) highThreshold(gt(score,mid),score,mid)
highThreshold(gt(score,high),score,high)
highThreshold(gt(score,low),score,low)
highThreshold(gt(score,property(snake,length)),score,property(snake,length))
highThreshold(gt(score,score),score,score)
highThreshold(ge(property(snake,length),0),property(snake,length),0)
highThreshold(ge(property(snake,length),mid),property(snake,length),mid)
highThreshold(ge(property(snake,length),high),property(snake,length),high)
highThreshold(ge(property(snake,length),low),property(snake,length),low)
highThreshold(ge(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
highThreshold(ge(property(snake,length),score),property(snake,length),score)
highThreshold(ge(score,0),score,0) highThreshold(ge(score,mid),score,mid)
highThreshold(ge(score,high),score,high)
highThreshold(ge(score,low),score,low)
highThreshold(ge(score,property(snake,length)),score,property(snake,length))
highThreshold(ge(score,score),score,score)
result_enables_condition(increase(property(snake,length)),gt(property(snake,length),0))
result_enables_condition(increase(property(snake,length)),gt(property(snake,length),mid))
result_enables_condition(increase(property(snake,length)),gt(property(snake,length),high))
result_enables_condition(increase(property(snake,length)),gt(property(snake,length),low))
result_enables_condition(increase(property(snake,length)),gt(property(snake,length),property(snake,length)))
result_enables_condition(increase(property(snake,length)),gt(property(snake,length),score))
result_enables_condition(increase(score),gt(score,0))
result_enables_condition(increase(score),gt(score,mid))
result_enables_condition(increase(score),gt(score,high))
result_enables_condition(increase(score),gt(score,low))
result_enables_condition(increase(score),gt(score,property(snake,length)))
result_enables_condition(increase(score),gt(score,score))
result_enables_condition(increase(property(snake,length)),ge(property(snake,length),0))
result_enables_condition(increase(property(snake,length)),ge(property(snake,length),mid))
result_enables_condition(increase(property(snake,length)),ge(property(snake,length),high))
result_enables_condition(increase(property(snake,length)),ge(property(snake,length),low))
result_enables_condition(increase(property(snake,length)),ge(property(snake,length),property(snake,length)))
result_enables_condition(increase(property(snake,length)),ge(property(snake,length),score))
result_enables_condition(increase(score),ge(score,0))
result_enables_condition(increase(score),ge(score,mid))
result_enables_condition(increase(score),ge(score,high))
result_enables_condition(increase(score),ge(score,low))
result_enables_condition(increase(score),ge(score,property(snake,length)))
result_enables_condition(increase(score),ge(score,score))
result_enables_condition(decrease(property(snake,length)),lt(property(snake,length),0))
result_enables_condition(decrease(property(snake,length)),lt(property(snake,length),mid))
result_enables_condition(decrease(property(snake,length)),lt(property(snake,length),high))
result_enables_condition(decrease(property(snake,length)),lt(property(snake,length),low))
result_enables_condition(decrease(property(snake,length)),lt(property(snake,length),property(snake,length)))
result_enables_condition(decrease(property(snake,length)),lt(property(snake,length),score))
result_enables_condition(decrease(score),lt(score,0))
result_enables_condition(decrease(score),lt(score,mid))
result_enables_condition(decrease(score),lt(score,high))
result_enables_condition(decrease(score),lt(score,low))
result_enables_condition(decrease(score),lt(score,property(snake,length)))
result_enables_condition(decrease(score),lt(score,score))
result_enables_condition(decrease(property(snake,length)),le(property(snake,length),0))
result_enables_condition(decrease(property(snake,length)),le(property(snake,length),mid))
result_enables_condition(decrease(property(snake,length)),le(property(snake,length),high))
result_enables_condition(decrease(property(snake,length)),le(property(snake,length),low))
result_enables_condition(decrease(property(snake,length)),le(property(snake,length),property(snake,length)))
result_enables_condition(decrease(property(snake,length)),le(property(snake,length),score))
result_enables_condition(decrease(score),le(score,0))
result_enables_condition(decrease(score),le(score,mid))
result_enables_condition(decrease(score),le(score,high))
result_enables_condition(decrease(score),le(score,low))
result_enables_condition(decrease(score),le(score,property(snake,length)))
result_enables_condition(decrease(score),le(score,score))
result_enables_condition(increase(property(snake,length),low),collide(snake,snake))
result_enables_condition(set_to(snake,trajectory(up)),set(snake,trajectory(up)))
result_enables_condition(set_to(snake,trajectory(down)),set(snake,trajectory(down)))
result_enables_condition(set_to(snake,trajectory(left)),set(snake,trajectory(left)))
result_enables_condition(set_to(snake,trajectory(right)),set(snake,trajectory(right)))
can_happen(set(snake,trajectory(left))) can_happen(mode_change(game_loss))
can_happen(increase(property(snake,length),low))
can_happen(increase(score,low)) can_happen(delete(food))
can_happen(add(food)) can_happen(dir_from(snake,up,food))
can_happen(dir_from(snake,down,food)) can_happen(dir_from(snake,left,food))
can_happen(dir_from(snake,right,food)) can_happen(moves(snake,up,low))
can_happen(moves(snake,down,low)) can_happen(moves(snake,left,low))
can_happen(moves(snake,right,low)) can_happen(set_to(snake,trajectory(up)))
can_happen(set_to(snake,trajectory(down)))
can_happen(set_to(snake,trajectory(left)))
can_happen(set_to(snake,trajectory(right)))
result_enables_condition(moves(snake,up,low),collide(snake,food))
result_enables_condition(moves(snake,down,low),collide(snake,food))
result_enables_condition(moves(snake,left,low),collide(snake,food))
result_enables_condition(moves(snake,right,low),collide(snake,food))
result_enables_condition(delete(food),absent(food))
result_enables(increase(property(snake,length),low),collide_with_self)
result_enables(moves(snake,up,low),eat)
result_enables(moves(snake,down,low),eat)
result_enables(moves(snake,left,low),eat)
result_enables(moves(snake,right,low),eat)
result_enables(delete(food),add_food(up))
result_enables(delete(food),add_food(down))
result_enables(delete(food),add_food(left))
result_enables(delete(food),add_food(right))
result_enables(set_to(snake,trajectory(up)),move(up))
result_enables(set_to(snake,trajectory(down)),move(down))
result_enables(set_to(snake,trajectory(left)),move(left))
result_enables(set_to(snake,trajectory(right)),move(right))
outcome_enablesN(collide_with_self,mode_change(game_loss),0)
outcome_enablesN(collide_with_wall,mode_change(game_loss),0)
outcome_enablesN(eat,increase(property(snake,length),low),0)
outcome_enablesN(eat,increase(score,low),0)
outcome_enablesN(eat,delete(food),0)
outcome_enablesN(add_food(up),add(food),0)
outcome_enablesN(add_food(down),add(food),0)
outcome_enablesN(add_food(left),add(food),0)
outcome_enablesN(add_food(right),add(food),0)
outcome_enablesN(add_food(up),dir_from(snake,up,food),0)
outcome_enablesN(add_food(down),dir_from(snake,down,food),0)
outcome_enablesN(add_food(left),dir_from(snake,left,food),0)
outcome_enablesN(add_food(right),dir_from(snake,right,food),0)
outcome_enablesN(move(snake,up),moves(snake,up,low),0)
outcome_enablesN(move(snake,down),moves(snake,down,low),0)
outcome_enablesN(move(snake,left),moves(snake,left,low),0)
outcome_enablesN(move(snake,right),moves(snake,right,low),0)
outcome_enablesN(turn(up),set_to(snake,trajectory(up)),0)
outcome_enablesN(turn(down),set_to(snake,trajectory(down)),0)
outcome_enablesN(turn(left),set_to(snake,trajectory(left)),0)
outcome_enablesN(turn(right),set_to(snake,trajectory(right)),0)
outcome_enablesN(eat,mode_change(game_loss),1)
outcome_enablesN(move(snake,up),increase(property(snake,length),low),1)
outcome_enablesN(move(snake,down),increase(property(snake,length),low),1)
outcome_enablesN(move(snake,left),increase(property(snake,length),low),1)
outcome_enablesN(move(snake,right),increase(property(snake,length),low),1)
outcome_enablesN(move(snake,up),increase(score,low),1)
outcome_enablesN(move(snake,down),increase(score,low),1)
outcome_enablesN(move(snake,left),increase(score,low),1)
outcome_enablesN(move(snake,right),increase(score,low),1)
outcome_enablesN(move(snake,up),delete(food),1)
outcome_enablesN(move(snake,down),delete(food),1)
outcome_enablesN(move(snake,left),delete(food),1)
outcome_enablesN(move(snake,right),delete(food),1)
outcome_enablesN(eat,add(food),1)
outcome_enablesN(eat,dir_from(snake,up,food),1)
outcome_enablesN(eat,dir_from(snake,down,food),1)
outcome_enablesN(eat,dir_from(snake,left,food),1)
outcome_enablesN(eat,dir_from(snake,right,food),1)
outcome_enables(collide_with_self,mode_change(game_loss))
outcome_enables(collide_with_wall,mode_change(game_loss))
outcome_enables(eat,increase(property(snake,length),low))
outcome_enables(eat,increase(score,low)) outcome_enables(eat,delete(food))
outcome_enables(add_food(up),add(food))
outcome_enables(add_food(down),add(food))
outcome_enables(add_food(left),add(food))
outcome_enables(add_food(right),add(food))
outcome_enables(add_food(up),dir_from(snake,up,food))
outcome_enables(add_food(down),dir_from(snake,down,food))
outcome_enables(add_food(left),dir_from(snake,left,food))
outcome_enables(add_food(right),dir_from(snake,right,food))
outcome_enables(move(snake,up),moves(snake,up,low))
outcome_enables(move(snake,down),moves(snake,down,low))
outcome_enables(move(snake,left),moves(snake,left,low))
outcome_enables(move(snake,right),moves(snake,right,low))
outcome_enables(turn(up),set_to(snake,trajectory(up)))
outcome_enables(turn(down),set_to(snake,trajectory(down)))
outcome_enables(turn(left),set_to(snake,trajectory(left)))
outcome_enables(turn(right),set_to(snake,trajectory(right)))
outcome_enables(eat,mode_change(game_loss))
outcome_enables(move(snake,up),increase(property(snake,length),low))
outcome_enables(move(snake,down),increase(property(snake,length),low))
outcome_enables(move(snake,left),increase(property(snake,length),low))
outcome_enables(move(snake,right),increase(property(snake,length),low))
outcome_enables(move(snake,up),increase(score,low))
outcome_enables(move(snake,down),increase(score,low))
outcome_enables(move(snake,left),increase(score,low))
outcome_enables(move(snake,right),increase(score,low))
outcome_enables(move(snake,up),delete(food))
outcome_enables(move(snake,down),delete(food))
outcome_enables(move(snake,left),delete(food))
outcome_enables(move(snake,right),delete(food))
outcome_enables(eat,add(food)) outcome_enables(eat,dir_from(snake,up,food))
outcome_enables(eat,dir_from(snake,down,food))
outcome_enables(eat,dir_from(snake,left,food))
outcome_enables(eat,dir_from(snake,right,food))
enables(eat,collide_with_self) enables(move(snake,up),collide_with_self)
enables(move(snake,down),collide_with_self)
enables(move(snake,left),collide_with_self)
enables(move(snake,right),collide_with_self) enables(move(snake,up),eat)
enables(move(snake,down),eat) enables(move(snake,left),eat)
enables(move(snake,right),eat) enables(eat,add_food(up))
enables(move(snake,up),add_food(up)) enables(move(snake,down),add_food(up))
enables(move(snake,left),add_food(up))
enables(move(snake,right),add_food(up)) enables(eat,add_food(down))
enables(move(snake,up),add_food(down))
enables(move(snake,down),add_food(down))
enables(move(snake,left),add_food(down))
enables(move(snake,right),add_food(down)) enables(eat,add_food(left))
enables(move(snake,up),add_food(left))
enables(move(snake,down),add_food(left))
enables(move(snake,left),add_food(left))
enables(move(snake,right),add_food(left)) enables(eat,add_food(right))
enables(move(snake,up),add_food(right))
enables(move(snake,down),add_food(right))
enables(move(snake,left),add_food(right))
enables(move(snake,right),add_food(right)) enables(turn(up),move(up))
enables(turn(down),move(down)) enables(turn(left),move(left))
enables(turn(right),move(right)) good(score)
outcomeAffects(property(snake,length),eat,positive)
outcomeAffects(score,eat,positive) outcome(collide_with_self)
outcome(collide_with_wall) outcome(eat) outcome(add_food(up))
outcome(add_food(down)) outcome(add_food(left)) outcome(add_food(right))
outcome(move(up)) outcome(move(down)) outcome(move(left))
outcome(move(right)) outcome(turn(up)) outcome(turn(down))
outcome(turn(left)) outcome(turn(right))
onlyOnePrecondition(collide_with_self)
onlyOnePrecondition(collide_with_wall) onlyOnePrecondition(eat)
onlyOnePrecondition(add_food(up)) onlyOnePrecondition(add_food(down))
onlyOnePrecondition(add_food(left)) onlyOnePrecondition(add_food(right))
onlyOnePrecondition(turn(up)) onlyOnePrecondition(turn(down))
onlyOnePrecondition(turn(left)) onlyOnePrecondition(turn(right))
outcomeFavorable(eat) outcomeUnfavorable(collide_with_self)
outcomeUnfavorable(collide_with_wall) goodResult(increase(score,low))
outcomeUnfavorable(eat) outcomeUnfavorable(move(snake,up))
outcomeUnfavorable(move(snake,down)) outcomeUnfavorable(move(snake,left))
outcomeUnfavorable(move(snake,right)) outcomeFavorable(move(snake,up))
outcomeFavorable(move(snake,down)) outcomeFavorable(move(snake,left))
outcomeFavorable(move(snake,right)) oppositeSides(screen_bottom,screen_top)
oppositeSides(screen_right,screen_left)
lhThreshold(lt(property(snake,length),0),property(snake,length),0)
lhThreshold(lt(property(snake,length),mid),property(snake,length),mid)
lhThreshold(lt(property(snake,length),high),property(snake,length),high)
lhThreshold(lt(property(snake,length),low),property(snake,length),low)
lhThreshold(lt(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
lhThreshold(lt(property(snake,length),score),property(snake,length),score)
lhThreshold(lt(score,0),score,0) lhThreshold(lt(score,mid),score,mid)
lhThreshold(lt(score,high),score,high) lhThreshold(lt(score,low),score,low)
lhThreshold(lt(score,property(snake,length)),score,property(snake,length))
lhThreshold(lt(score,score),score,score)
lhThreshold(le(property(snake,length),0),property(snake,length),0)
lhThreshold(le(property(snake,length),mid),property(snake,length),mid)
lhThreshold(le(property(snake,length),high),property(snake,length),high)
lhThreshold(le(property(snake,length),low),property(snake,length),low)
lhThreshold(le(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
lhThreshold(le(property(snake,length),score),property(snake,length),score)
lhThreshold(le(score,0),score,0) lhThreshold(le(score,mid),score,mid)
lhThreshold(le(score,high),score,high) lhThreshold(le(score,low),score,low)
lhThreshold(le(score,property(snake,length)),score,property(snake,length))
lhThreshold(le(score,score),score,score)
lhThreshold(gt(property(snake,length),0),property(snake,length),0)
lhThreshold(gt(property(snake,length),mid),property(snake,length),mid)
lhThreshold(gt(property(snake,length),high),property(snake,length),high)
lhThreshold(gt(property(snake,length),low),property(snake,length),low)
lhThreshold(gt(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
lhThreshold(gt(property(snake,length),score),property(snake,length),score)
lhThreshold(gt(score,0),score,0) lhThreshold(gt(score,mid),score,mid)
lhThreshold(gt(score,high),score,high) lhThreshold(gt(score,low),score,low)
lhThreshold(gt(score,property(snake,length)),score,property(snake,length))
lhThreshold(gt(score,score),score,score)
lhThreshold(ge(property(snake,length),0),property(snake,length),0)
lhThreshold(ge(property(snake,length),mid),property(snake,length),mid)
lhThreshold(ge(property(snake,length),high),property(snake,length),high)
lhThreshold(ge(property(snake,length),low),property(snake,length),low)
lhThreshold(ge(property(snake,length),property(snake,length)),property(snake,length),property(snake,length))
lhThreshold(ge(property(snake,length),score),property(snake,length),score)
lhThreshold(ge(score,0),score,0) lhThreshold(ge(score,mid),score,mid)
lhThreshold(ge(score,high),score,high) lhThreshold(ge(score,low),score,low)
lhThreshold(ge(score,property(snake,length)),score,property(snake,length))
lhThreshold(ge(score,score),score,score) hasTradeoff(eat)
hasTradeoff(move(snake,up)) hasTradeoff(move(snake,down))
hasTradeoff(move(snake,left)) hasTradeoff(move(snake,right))
moreThanOnePrecondition(move(up)) moreThanOnePrecondition(move(down))
moreThanOnePrecondition(move(left)) moreThanOnePrecondition(move(right))
correlated(score,property(snake,length),positive)
correlated(property(snake,length),score,positive)
conditionEnablesN(collide(snake,snake),collide_with_self,0)
conditionEnablesN(collide(snake,wall),collide_with_wall,0)
conditionEnablesN(collide(snake,food),eat,0)
conditionEnablesN(absent(food),add_food(up),0)
conditionEnablesN(absent(food),add_food(down),0)
conditionEnablesN(absent(food),add_food(left),0)
conditionEnablesN(absent(food),add_food(right),0)
conditionEnablesN(tick,move(up),0) conditionEnablesN(tick,move(down),0)
conditionEnablesN(tick,move(left),0) conditionEnablesN(tick,move(right),0)
conditionEnablesN(set(snake,trajectory(up)),move(up),0)
conditionEnablesN(set(snake,trajectory(down)),move(down),0)
conditionEnablesN(set(snake,trajectory(left)),move(left),0)
conditionEnablesN(set(snake,trajectory(right)),move(right),0)
conditionEnablesN(control_event(arrow(up)),turn(up),0)
conditionEnablesN(control_event(arrow(down)),turn(down),0)
conditionEnablesN(control_event(arrow(left)),turn(left),0)
conditionEnablesN(control_event(arrow(right)),turn(right),0)
conditionEnablesN(collide(snake,food),collide_with_self,1)
conditionEnablesN(collide(snake,food),add_food(up),1)
conditionEnablesN(collide(snake,food),add_food(down),1)
conditionEnablesN(collide(snake,food),add_food(left),1)
conditionEnablesN(collide(snake,food),add_food(right),1)
conditionEnablesN(control_event(arrow(up)),move(up),1)
conditionEnablesN(control_event(arrow(down)),move(down),1)
conditionEnablesN(control_event(arrow(left)),move(left),1)
conditionEnablesN(control_event(arrow(right)),move(right),1)
conditionEnables(collide(snake,snake),collide_with_self)
conditionEnables(collide(snake,wall),collide_with_wall)
conditionEnables(collide(snake,food),eat)
conditionEnables(absent(food),add_food(up))
conditionEnables(absent(food),add_food(down))
conditionEnables(absent(food),add_food(left))
conditionEnables(absent(food),add_food(right))
conditionEnables(tick,move(up)) conditionEnables(tick,move(down))
conditionEnables(tick,move(left)) conditionEnables(tick,move(right))
conditionEnables(set(snake,trajectory(up)),move(up))
conditionEnables(set(snake,trajectory(down)),move(down))
conditionEnables(set(snake,trajectory(left)),move(left))
conditionEnables(set(snake,trajectory(right)),move(right))
conditionEnables(control_event(arrow(up)),turn(up))
conditionEnables(control_event(arrow(down)),turn(down))
conditionEnables(control_event(arrow(left)),turn(left))
conditionEnables(control_event(arrow(right)),turn(right))
conditionEnables(collide(snake,food),collide_with_self)
conditionEnables(collide(snake,food),add_food(up))
conditionEnables(collide(snake,food),add_food(down))
conditionEnables(collide(snake,food),add_food(left))
conditionEnables(collide(snake,food),add_food(right))
conditionEnables(control_event(arrow(up)),move(up))
conditionEnables(control_event(arrow(down)),move(down))
conditionEnables(control_event(arrow(left)),move(left))
conditionEnables(control_event(arrow(right)),move(right))
playerCreatesCondition(control_event(arrow(up)))
playerCreatesCondition(control_event(arrow(down)))
playerCreatesCondition(control_event(arrow(left)))
playerCreatesCondition(control_event(arrow(right))) nonMonotonic(snake)
monotonicallyIncreases(property(snake,length))
monotonicallyIncreases(score)
collide_precond(snake,snake,collide_with_self)
collide_precond(snake,wall,collide_with_wall)
collide_precond(snake,food,eat)
collide_precond(wall,snake,collide_with_wall)
collide_precond(food,snake,eat) goal(relates(collide_with_self))
goal(relates(collide_with_wall)) entity(wall(up)) entity(wall(down))
entity(wall(left)) entity(wall(right)) restrictedEntity(snake)
restrictedEntity(food) restrictedEntity(wall(up))
restrictedEntity(wall(down)) restrictedEntity(wall(left))
restrictedEntity(wall(right)) restricted(collide_with_self)
restricted(collide_with_wall) restricted(eat) restricted(add_food(up))
restricted(add_food(down)) restricted(add_food(left))
restricted(add_food(right)) restricted(move(up)) restricted(move(down))
restricted(move(left)) restricted(move(right)) restricted(turn(up))
restricted(turn(down)) restricted(turn(left)) restricted(turn(right))
gradual(move(up)) gradual(move(down)) gradual(move(left))
gradual(move(right)) amount(low) playerInfluences(turn(up))
playerInfluences(turn(down)) playerInfluences(turn(left))
playerInfluences(turn(right)) systemInfluences(collide_with_self)
systemInfluences(collide_with_wall) systemInfluences(eat)
systemInfluences(add_food(up)) systemInfluences(add_food(down))
systemInfluences(add_food(left)) systemInfluences(add_food(right))
systemInfluences(move(up)) systemInfluences(move(down))
systemInfluences(move(left)) systemInfluences(move(right))
playerDetermines(turn(up)) playerDetermines(turn(down))
playerDetermines(turn(left)) playerDetermines(turn(right)) SATISFIABLE

Models       : 1     
Calls        : 1
Time         : 0.047s (Solving: 0.00s 1st Model: 0.00s Unsat: 0.00s)
CPU Time     : 0.040s
