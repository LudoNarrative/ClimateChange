action(add(entity(e(1)),scalar(1),location(middle,left)))
action(add(entity(e(3)),scalar(1),location(bottom,right)))
action(delete(entity(e(1))))
action(delete(entity(e(3))))
action(mode_change(narrative_gating))
action(modify(decrease,resource(r(1))))
action(modify(decrease,resource(r(2))))
action(modify(increase,resource(r(1))))
angle_direction(ccw)
angle_direction(cw)
angle_speeds(1)
angle_speeds(10)
angle_speeds(5)
angle_speeds_discrete(10)
angle_speeds_discrete(20)
angle_speeds_discrete(30)
angle_speeds_discrete(45)
angle_speeds_discrete(60)
angle_speeds_discrete(90)
avatar_controls(0)
behaviors(chase)
behaviors(flee)
behaviors(patrol)
behaviors(pingpong)
behaviors(wander)
buttonPriority(down_arrow,left_arrow)
buttonPriority(down_arrow,right_arrow)
buttonPriority(down_arrow,up_arrow)
buttonPriority(mouse,down_arrow)
buttonPriority(mouse,left_arrow)
buttonPriority(mouse,right_arrow)
buttonPriority(mouse,space)
buttonPriority(mouse,up_arrow)
buttonPriority(space,down_arrow)
buttonPriority(space,left_arrow)
buttonPriority(space,right_arrow)
buttonPriority(space,up_arrow)
buttonPriority(up_arrow,left_arrow)
buttonPriority(up_arrow,right_arrow)
buttonStates(held)
buttonStates(pressed)
buttons(down_arrow)
buttons(left_arrow)
buttons(mouse)
buttons(right_arrow)
buttons(space)
buttons(up_arrow)
change(game_loss,negative)
change(game_win,positive)
change(narrative_gating,positive)
change(narrative_progress,positive)
col(center)
col(left)
col(right)
colors(black)
colors(blue)
colors(cyan)
colors(gray)
colors(green)
colors(magenta)
colors(red)
colors(white)
colors(yellow)
complex(entities)
condition(compare(le,resource(r(1))))
condition(overlaps(entity(e(1))))
condition(overlaps(entity(e(1)),entity(e(2)),true))
condition(overlaps(entity(e(2))))
condition(overlaps(entity(e(3))))
condition(overlaps(entity(e(3)),entity(e(3)),false))
condition(overlaps(entity(e(3)),entity(e(3)),true))
condition(tick)
constant(entity(e(2)))
constants(0)
constants(1)
constants(2)
constants(3)
controlLogic(draggable(entity(e(2))))
controlLogic(draggable(entity(e(3))))
controlScheme(entity(e(2)),click_and_drag)
controlScheme(entity(e(3)),click_and_drag)
different_precondition(outcome(o(1)),outcome(o(1)))
different_precondition(outcome(o(1)),outcome(o(2)))
different_precondition(outcome(o(1)),outcome(o(3)))
different_precondition(outcome(o(1)),outcome(o(4)))
different_precondition(outcome(o(1)),tick)
different_precondition(outcome(o(2)),outcome(o(1)))
different_precondition(outcome(o(2)),outcome(o(2)))
different_precondition(outcome(o(2)),outcome(o(3)))
different_precondition(outcome(o(2)),outcome(o(4)))
different_precondition(outcome(o(2)),tick)
different_precondition(outcome(o(3)),outcome(o(1)))
different_precondition(outcome(o(3)),outcome(o(2)))
different_precondition(outcome(o(3)),outcome(o(3)))
different_precondition(outcome(o(3)),outcome(o(4)))
different_precondition(outcome(o(3)),tick)
different_precondition(outcome(o(4)),outcome(o(1)))
different_precondition(outcome(o(4)),outcome(o(2)))
different_precondition(outcome(o(4)),outcome(o(3)))
different_precondition(outcome(o(4)),outcome(o(4)))
different_precondition(outcome(o(4)),tick)
different_precondition(tick,outcome(o(1)))
different_precondition(tick,outcome(o(2)))
different_precondition(tick,outcome(o(3)))
different_precondition(tick,outcome(o(4)))
different_precondition(tick,tick)
directControls(asteroids)
directControls(cardinal)
directControls(horizontal)
directControls(tank)
directControls(vertical)
entity(entity(e(1)))
entity(entity(e(2)))
entity(entity(e(3)))
every_frame(outcome(o(1)))
every_frame(outcome(o(4)))
every_frame(tick)
freeResource(decrease,resource(r(1)))
freeResource(decrease,resource(r(2)))
freeResource(increase,resource(r(1)))
frivolous(resource(r(2)))
hasSymmetry(initialize(add(entity(e(1)),scalar(1),location(bottom,center))))
hasSymmetry(initialize(add(entity(e(1)),scalar(1),location(middle,left))))
hasSymmetry(initialize(add(entity(e(1)),scalar(1),location(top,center))))
hasSymmetry(initialize(add(entity(e(2)),scalar(1),location(bottom,left))))
hasSymmetry(initialize(add(entity(e(2)),scalar(1),location(top,right))))
hasSymmetry(initialize(add(entity(e(3)),scalar(1),location(bottom,right))))
hasSymmetry(initialize(add(entity(e(3)),scalar(1),location(middle,right))))
hasSymmetry(initialize(add(entity(e(3)),scalar(1),location(top,left))))
hasSymmetry(result(outcome(o(2)),add(entity(e(3)),scalar(1),location(bottom,right))))
has_overlaps(outcome(o(2)))
has_overlaps(outcome(o(3)))
has_overlaps(outcome(o(4)))
has_precondition(outcome(o(1)))
has_precondition(outcome(o(2)))
has_precondition(outcome(o(3)))
has_precondition(outcome(o(4)))
has_precondition(tick)
has_result(outcome(o(1)))
has_result(outcome(o(2)))
has_result(outcome(o(3)))
has_result(outcome(o(4)))
has_result(tick)
ignoredCondition(overlaps(entity(e(1))))
ignoredCondition(overlaps(entity(e(2))))
ignoredCondition(overlaps(entity(e(3))))
in_between(location(bottom,center),location(bottom,left),location(bottom,right))
in_between(location(bottom,center),location(bottom,left),location(middle,right))
in_between(location(bottom,center),location(bottom,left),location(top,right))
in_between(location(bottom,center),location(bottom,right),location(bottom,left))
in_between(location(bottom,center),location(bottom,right),location(middle,left))
in_between(location(bottom,center),location(bottom,right),location(top,left))
in_between(location(bottom,center),location(middle,left),location(bottom,right))
in_between(location(bottom,center),location(middle,left),location(middle,right))
in_between(location(bottom,center),location(middle,left),location(top,right))
in_between(location(bottom,center),location(middle,right),location(bottom,left))
in_between(location(bottom,center),location(middle,right),location(middle,left))
in_between(location(bottom,center),location(middle,right),location(top,left))
in_between(location(bottom,center),location(top,left),location(bottom,right))
in_between(location(bottom,center),location(top,left),location(middle,right))
in_between(location(bottom,center),location(top,left),location(top,right))
in_between(location(bottom,center),location(top,right),location(bottom,left))
in_between(location(bottom,center),location(top,right),location(middle,left))
in_between(location(bottom,center),location(top,right),location(top,left))
in_between(location(middle,left),location(bottom,center),location(top,center))
in_between(location(middle,left),location(bottom,center),location(top,left))
in_between(location(middle,left),location(bottom,center),location(top,right))
in_between(location(middle,left),location(bottom,left),location(top,center))
in_between(location(middle,left),location(bottom,left),location(top,left))
in_between(location(middle,left),location(bottom,left),location(top,right))
in_between(location(middle,left),location(bottom,right),location(top,center))
in_between(location(middle,left),location(bottom,right),location(top,left))
in_between(location(middle,left),location(bottom,right),location(top,right))
in_between(location(middle,left),location(top,center),location(bottom,center))
in_between(location(middle,left),location(top,center),location(bottom,left))
in_between(location(middle,left),location(top,center),location(bottom,right))
in_between(location(middle,left),location(top,left),location(bottom,center))
in_between(location(middle,left),location(top,left),location(bottom,left))
in_between(location(middle,left),location(top,left),location(bottom,right))
in_between(location(middle,left),location(top,right),location(bottom,center))
in_between(location(middle,left),location(top,right),location(bottom,left))
in_between(location(middle,left),location(top,right),location(bottom,right))
in_between(location(middle,right),location(bottom,center),location(top,center))
in_between(location(middle,right),location(bottom,center),location(top,left))
in_between(location(middle,right),location(bottom,center),location(top,right))
in_between(location(middle,right),location(bottom,left),location(top,center))
in_between(location(middle,right),location(bottom,left),location(top,left))
in_between(location(middle,right),location(bottom,left),location(top,right))
in_between(location(middle,right),location(bottom,right),location(top,center))
in_between(location(middle,right),location(bottom,right),location(top,left))
in_between(location(middle,right),location(bottom,right),location(top,right))
in_between(location(middle,right),location(top,center),location(bottom,center))
in_between(location(middle,right),location(top,center),location(bottom,left))
in_between(location(middle,right),location(top,center),location(bottom,right))
in_between(location(middle,right),location(top,left),location(bottom,center))
in_between(location(middle,right),location(top,left),location(bottom,left))
in_between(location(middle,right),location(top,left),location(bottom,right))
in_between(location(middle,right),location(top,right),location(bottom,center))
in_between(location(middle,right),location(top,right),location(bottom,left))
in_between(location(middle,right),location(top,right),location(bottom,right))
in_between(location(top,center),location(bottom,left),location(bottom,right))
in_between(location(top,center),location(bottom,left),location(middle,right))
in_between(location(top,center),location(bottom,left),location(top,right))
in_between(location(top,center),location(bottom,right),location(bottom,left))
in_between(location(top,center),location(bottom,right),location(middle,left))
in_between(location(top,center),location(bottom,right),location(top,left))
in_between(location(top,center),location(middle,left),location(bottom,right))
in_between(location(top,center),location(middle,left),location(middle,right))
in_between(location(top,center),location(middle,left),location(top,right))
in_between(location(top,center),location(middle,right),location(bottom,left))
in_between(location(top,center),location(middle,right),location(middle,left))
in_between(location(top,center),location(middle,right),location(top,left))
in_between(location(top,center),location(top,left),location(bottom,right))
in_between(location(top,center),location(top,left),location(middle,right))
in_between(location(top,center),location(top,left),location(top,right))
in_between(location(top,center),location(top,right),location(bottom,left))
in_between(location(top,center),location(top,right),location(middle,left))
in_between(location(top,center),location(top,right),location(top,left))
in_between_horizontal(center,left,right)
in_between_horizontal(center,right,left)
in_between_vertical(middle,bottom,top)
in_between_vertical(middle,top,bottom)
indirectControls(click_and_drag)
indirectControls(click_to_move)
indirectControls(click_to_spin)
indirectControls(drawn_to_cursor)
indirectControls(repeled_from_cursor)
initialize(add(entity(e(1)),scalar(1),location(bottom,center)))
initialize(add(entity(e(1)),scalar(1),location(middle,left)))
initialize(add(entity(e(1)),scalar(1),location(top,center)))
initialize(add(entity(e(2)),scalar(1),location(bottom,left)))
initialize(add(entity(e(2)),scalar(1),location(top,right)))
initialize(add(entity(e(3)),scalar(1),location(bottom,right)))
initialize(add(entity(e(3)),scalar(1),location(middle,right)))
initialize(add(entity(e(3)),scalar(1),location(top,left)))
initialize(set_color(entity(e(1)),red))
initialize(set_color(entity(e(2)),white))
initialize(set_color(entity(e(3)),cyan))
initialize(set_draggable(entity(e(2)),true))
initialize(set_draggable(entity(e(3)),true))
initialize(set_sprite(entity(e(1)),triangle))
initialize(set_sprite(entity(e(2)),circle))
initialize(set_sprite(entity(e(3)),square))
initialize(set_static(entity(e(1)),true))
keyboard(down_arrow)
keyboard(left_arrow)
keyboard(right_arrow)
keyboard(space)
keyboard(up_arrow)
location(-1,-1)
location(-1,0)
location(-1,1)
location(0,-1)
location(0,0)
location(0,1)
location(1,-1)
location(1,0)
location(1,1)
location(bottom,center)
location(bottom,left)
location(bottom,right)
location(middle,left)
location(middle,right)
location(top,center)
location(top,left)
location(top,right)
many(entity(e(1)))
many(entity(e(2)))
many(entity(e(3)))
max_entity(3)
max_outcome(3)
max_outcome(4)
max_resource(1)
max_resource(2)
modes(game_loss)
modes(game_win)
modes(narrative_gating)
modes(narrative_progress)
monotonic(decrease)
monotonic(decrease,resource(r(1)))
monotonic(decrease,resource(r(2)))
monotonic(increase)
monotonic(increase,resource(r(1)))
monotonic(resource(r(1)))
monotonic(resource(r(2)))
moves(entity(e(2)))
moves(entity(e(3)))
moving(entity(e(2)))
moving(entity(e(3)))
non_monotonic(entity(e(1)))
non_monotonic(entity(e(2)))
non_monotonic(entity(e(3)))
not_every_frame(outcome(o(2)))
not_every_frame(outcome(o(3)))
number(1)
number(2)
number(3)
number(4)
number(5)
number_to_place(entity(e(1)),1)
number_to_place(entity(e(2)),1)
number_to_place(entity(e(3)),1)
only_one_precondition(outcome(o(1)))
only_one_precondition(tick)
outcome(outcome(o(1)))
outcome(outcome(o(2)))
outcome(outcome(o(3)))
outcome(outcome(o(4)))
outcome(tick)
outcome_creates_condition(tick,compare(le,resource(r(1))))
outcome_enables(tick,outcome(o(1)))
over_time(decrease,resource(r(1)))
over_time(tick)
overlaps(3)
place(entity(e(1)))
place(entity(e(2)))
place(entity(e(3)))
place(location(-1,-1))
place(location(-1,0))
place(location(-1,1))
place(location(0,-1))
place(location(0,0))
place(location(0,1))
place(location(1,-1))
place(location(1,0))
place(location(1,1))
place(location(bottom,center))
place(location(bottom,left))
place(location(bottom,right))
place(location(middle,left))
place(location(middle,right))
place(location(top,center))
place(location(top,left))
place(location(top,right))
playerControls
player_controls(entity(e(2)))
player_controls(entity(e(3)))
player_controls_outcome(outcome(o(2)))
player_controls_outcome(outcome(o(3)))
player_controls_outcome(outcome(o(4)))
player_model(outcome(o(1)),undetermined)
player_model(outcome(o(2)),undetermined)
player_model(outcome(o(3)),undetermined)
player_model(outcome(o(4)),undetermined)
player_model(tick,must_happen)
polarity(false)
polarity(true)
precondition(compare(le,resource(r(1))),outcome(o(1)))
precondition(overlaps(entity(e(1))),outcome(o(2)))
precondition(overlaps(entity(e(1)),entity(e(2)),true),outcome(o(2)))
precondition(overlaps(entity(e(2))),outcome(o(2)))
precondition(overlaps(entity(e(3))),outcome(o(3)))
precondition(overlaps(entity(e(3))),outcome(o(4)))
precondition(overlaps(entity(e(3)),entity(e(3)),false),outcome(o(4)))
precondition(overlaps(entity(e(3)),entity(e(3)),true),outcome(o(3)))
precondition(tick,tick)
preconditions_allowed(9)
properties(health)
reachableCondition(collide(entity(e(1)),entity(e(2))))
reachableCondition(collide(entity(e(3)),entity(e(3))))
reachableCondition(compare(ge,resource(r(1))))
reachableCondition(compare(le,resource(r(1))))
reachableCondition(compare(le,resource(r(2))))
reachableCondition(overlaps(entity(e(1)),entity(e(2)),true))
reachableCondition(overlaps(entity(e(2))))
reachableCondition(overlaps(entity(e(3))))
reachableCondition(overlaps(entity(e(3)),entity(e(3)),false))
reachableCondition(overlaps(entity(e(3)),entity(e(3)),true))
reachableCondition(tick)
reachableOutcome(outcome(o(1)))
reachableOutcome(outcome(o(2)))
reachableOutcome(outcome(o(3)))
reachableOutcome(outcome(o(4)))
reachableOutcome(tick)
reading(consumes,relation(entity(e(2)),entity(e(1))))
reading(consumes,relation(entity(e(3)),entity(e(3))))
reading(consumes,relation(entity(e(3)),resource(r(2))))
reading(goal(produce),resource(r(1)))
reading(good,property(entity(e(2)),health))
reading(good,property(entity(e(3)),health))
reading(good,resource(r(1)))
reading(maintenance,resource(r(1)))
reading(sharing,relation(entity(e(1)),entity(e(2))))
reading_about(entity(e(1)))
reading_about(entity(e(2)))
reading_about(entity(e(3)))
reading_about(property(entity(e(2)),health))
reading_about(property(entity(e(3)),health))
reading_about(relation(entity(e(1)),entity(e(2))))
reading_about(relation(entity(e(2)),entity(e(1))))
reading_about(relation(entity(e(3)),entity(e(3))))
reading_about(relation(entity(e(3)),resource(r(2))))
reading_about(resource(r(1)))
reading_about(resource(r(2)))
readings(9)
required(entity(e(1)))
required(entity(e(2)))
required(entity(e(3)))
resource(resource(r(1)))
resource(resource(r(2)))
result(outcome(o(1)),mode_change(narrative_gating))
result(outcome(o(2)),add(entity(e(3)),scalar(1),location(bottom,right)))
result(outcome(o(2)),delete(entity(e(1))))
result(outcome(o(2)),modify(increase,resource(r(1))))
result(outcome(o(3)),add(entity(e(1)),scalar(1),location(middle,left)))
result(outcome(o(3)),delete(entity(e(3))))
result(outcome(o(3)),modify(decrease,resource(r(2))))
result(outcome(o(4)),modify(decrease,resource(r(2))))
result(tick,modify(decrease,resource(r(1))))
row(bottom)
row(middle)
row(top)
simple(entity(e(1)))
simple(entity(e(2)))
simple(entity(e(3)))
simple(resource(r(1)))
simple(resource(r(2)))
spatial_condition(entity(e(1)),entity(e(2)))
spatial_condition(entity(e(2)),entity(e(1)))
spatial_condition(entity(e(3)),entity(e(3)))
spawnsAtInitial(entity(e(1)))
spawnsAtInitial(entity(e(3)))
speed(entity(e(2)),4)
speed(entity(e(3)),2)
speed_values(1)
speed_values(2)
speed_values(4)
sprite(circle)
sprite(pentagon)
sprite(square)
sprite(star)
sprite(triangle)
standard_outcome(outcome(o(1)))
standard_outcome(outcome(o(2)))
standard_outcome(outcome(o(3)))
standard_outcome(outcome(o(4)))
static(entity(e(1)))
symmetric(bottom,top)
symmetric(center,center)
symmetric(left,right)
symmetric(location(bottom,center),location(top,center))
symmetric(location(bottom,left),location(top,right))
symmetric(location(bottom,right),location(top,left))
symmetric(location(middle,center),location(middle,center))
symmetric(location(middle,left),location(middle,right))
symmetric(location(middle,right),location(middle,left))
symmetric(location(top,center),location(bottom,center))
symmetric(location(top,left),location(bottom,right))
symmetric(location(top,right),location(bottom,left))
symmetric(middle,middle)
symmetric(right,left)
symmetric(top,bottom)
total_count(entity(e(1)),3)
total_count(entity(e(2)),2)
total_count(entity(e(3)),3)
unreachableCondition(overlaps(entity(e(1))))
