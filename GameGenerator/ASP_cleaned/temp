

























:
:
:
:
...
0.00s)
0.22s
0.22s
1
1
1+
1.270s
1.272s
1st
5.2.0
action(add(entity(e(1)),scalar(1),pool(entity(e(1)))))
action(add(entity(e(2)),scalar(1),pool(entity(e(2)))))
action(apply_restitution(entity(e(1)),entity(e(1))))
action(apply_restitution(entity(e(2)),entity(e(2))))
action(clear(entity(e(1))))
action(delete(entity(e(1))))
action(delete(entity(e(2))))
action(look_at(entity(e(1)),cursor,nearest))
action(modify(decrease,property(entity(e(1)),health)))
action(modify(decrease,property(entity(e(2)),health)))
action(move(entity(e(1)),direction(right)))
allowed(monotonic(orange))
amount_to_spawn(scalar(1))
angle_direction(ccw)
angle_direction(cw)
angle_speeds(1)
angle_speeds(10)
angle_speeds(5)
angle_speeds_discrete(30)
angle_speeds_discrete(45)
angle_speeds_discrete(60)
angle_speeds_discrete(90)
Answer:
avatar_controls(0)
behaviors(chase)
behaviors(flee)
behaviors(orbit)
behaviors(patrol)
behaviors(pingpong)
behaviors(wander)
boundary(closed)
boundary_types(closed)
boundary_types(torus)
buttonPriority(down_arrow,left_arrow)
buttonPriority(down_arrow,right_arrow)
buttonPriority(down_arrow,up_arrow)
buttonPriority(mouse,down_arrow)
buttonPriority(mouse,left_arrow)
buttonPriority(mouse,right_arrow)
buttonPriority(mouse,space)
buttonPriority(mouse,up_arrow)
buttonPriority(space,down_arrow)
buttonPriority(space,left_arrow)
buttonPriority(space,right_arrow)
buttonPriority(space,up_arrow)
buttonPriority(up_arrow,left_arrow)
buttonPriority(up_arrow,right_arrow)
buttons(down_arrow)
buttons(left_arrow)
buttons(mouse)
buttons(right_arrow)
buttons(space)
buttonStates(held)
buttonStates(pressed)
buttons(up_arrow)
Calls
change(game_loss,negative)
change(game_win,positive)
change(narrative_gating,positive)
change(narrative_progress,positive)
clingo
col(center)
col(left)
colors(blue)
colors(blue,2)
colors(green,3)
colors(magenta,5)
colors(orange,6)
colors(red)
colors(red,1)
colors(yellow,4)
col(right)
compare_direction(ge)
compare_direction(le)
complex(entities)
condition(compare(le,amount(orange)))
condition(control_event(button(mouse,held)))
condition(control_event(click(entity(e(1)))))
condition(overlaps(entity(e(1))))
condition(overlaps(entity(e(1)),entity(e(2)),true))
condition(overlaps(entity(e(2))))
condition(overlaps(entity(e(2)),entity(e(2)),true))
condition(tick)
condition(timer_elapsed(t(1)))
constants(0)
constants(1)
constants(2)
constants(3)
control_event(click(entity(e(1))),add(entity(e(2))))
control_event(click(entity(e(1))),delete(entity(e(1))))
controlLogic(draggable(entity(e(2))))
controlScheme(click_and_drag)
controlScheme(entity(e(1)),orbit_the_cursor)
controlScheme(entity(e(2)),click_and_drag)
controlScheme(orbit_the_cursor)
CPU
different_movement(entity(e(1)),entity(e(2)))
different_movement(entity(e(2)),entity(e(1)))
different_precondition(outcome(o(1)),outcome(o(1)))
different_precondition(outcome(o(1)),outcome(o(2)))
different_precondition(outcome(o(1)),outcome(o(3)))
different_precondition(outcome(o(1)),outcome(o(4)))
different_precondition(outcome(o(1)),outcome(o(5)))
different_precondition(outcome(o(1)),outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(outcome(o(1)),tick)
different_precondition(outcome(o(2)),outcome(o(1)))
different_precondition(outcome(o(2)),outcome(o(2)))
different_precondition(outcome(o(2)),outcome(o(3)))
different_precondition(outcome(o(2)),outcome(o(4)))
different_precondition(outcome(o(2)),outcome(o(5)))
different_precondition(outcome(o(2)),outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(outcome(o(2)),tick)
different_precondition(outcome(o(3)),outcome(o(1)))
different_precondition(outcome(o(3)),outcome(o(2)))
different_precondition(outcome(o(3)),outcome(o(3)))
different_precondition(outcome(o(3)),outcome(o(4)))
different_precondition(outcome(o(3)),outcome(o(5)))
different_precondition(outcome(o(3)),outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(outcome(o(3)),tick)
different_precondition(outcome(o(4)),outcome(o(1)))
different_precondition(outcome(o(4)),outcome(o(2)))
different_precondition(outcome(o(4)),outcome(o(3)))
different_precondition(outcome(o(4)),outcome(o(4)))
different_precondition(outcome(o(4)),outcome(o(5)))
different_precondition(outcome(o(4)),outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(outcome(o(4)),tick)
different_precondition(outcome(o(5)),outcome(o(1)))
different_precondition(outcome(o(5)),outcome(o(2)))
different_precondition(outcome(o(5)),outcome(o(3)))
different_precondition(outcome(o(5)),outcome(o(4)))
different_precondition(outcome(o(5)),outcome(o(5)))
different_precondition(outcome(o(5)),outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(outcome(o(5)),tick)
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),outcome(o(1)))
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),outcome(o(2)))
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),outcome(o(3)))
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),outcome(o(4)))
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),outcome(o(5)))
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(outcome(orbit_the_cursor(entity(e(1)))),tick)
different_precondition(tick,outcome(o(1)))
different_precondition(tick,outcome(o(2)))
different_precondition(tick,outcome(o(3)))
different_precondition(tick,outcome(o(4)))
different_precondition(tick,outcome(o(5)))
different_precondition(tick,outcome(orbit_the_cursor(entity(e(1)))))
different_precondition(tick,tick)
directControls(asteroids)
directControls(cardinal)
directControls(horizontal)
directControls(tank)
directControls(vertical)
entity(entity(e(1)))
entity(entity(e(2)))
every_frame(outcome(o(3)))
every_frame(outcome(o(5)))
every_frame(outcome(orbit_the_cursor(entity(e(1)))))
every_frame(tick)
from
generation_constraints.lp
has_overlaps(outcome(o(1)))
has_overlaps(outcome(o(5)))
has_precondition(outcome(o(1)))
has_precondition(outcome(o(2)))
has_precondition(outcome(o(3)))
has_precondition(outcome(o(4)))
has_precondition(outcome(o(5)))
has_precondition(outcome(orbit_the_cursor(entity(e(1)))))
has_precondition(tick)
has_result(outcome(o(1)))
has_result(outcome(o(2)))
has_result(outcome(o(3)))
has_result(outcome(o(4)))
has_result(outcome(o(5)))
has_result(outcome(orbit_the_cursor(entity(e(1)))))
has_result(tick)
ignoredCondition(overlaps(entity(e(1))))
ignoredCondition(overlaps(entity(e(2))))
indirectControls
indirectControls(click_and_drag)
indirectControls(click_to_move)
indirectControls(click_to_spin)
indirectControls(drawn_to_cursor)
indirectControls(orbit_the_cursor)
indirectControls(repeled_from_cursor)
initialize(add(entity(e(1)),scalar(1),location(bottom,left)))
initialize(add(entity(e(1)),scalar(1),location(bottom,right)))
initialize(add(entity(e(1)),scalar(1),location(top,left)))
initialize(add(entity(e(1)),scalar(1),location(top,right)))
initialize(add(entity(e(2)),scalar(1),location(middle,center)))
initialize(fill(all,orange))
initialize(set_color(entity(e(1)),red))
initialize(set_color(entity(e(2)),blue))
initialize(set_draggable(entity(e(2)),true))
initialize(set_sprite(entity(e(1)),circle))
initialize(set_sprite(entity(e(2)),circle))
invalidated(outcome(o(1)),player_might_attempt)
invalidated(outcome(o(1)),player_will_attempt)
invalidated(outcome(o(1)),player_will_avoid)
invalidated(outcome(o(1)),undetermined)
invalidated(outcome(o(2)),player_might_attempt)
invalidated(outcome(o(2)),player_will_attempt)
invalidated(outcome(o(2)),player_will_avoid)
invalidated(outcome(o(2)),undetermined)
invalidated(outcome(o(3)),player_might_attempt)
invalidated(outcome(o(3)),player_must_do)
invalidated(outcome(o(3)),player_will_attempt)
invalidated(outcome(o(3)),player_will_avoid)
invalidated(outcome(o(3)),undetermined)
invalidated(outcome(o(4)),player_might_attempt)
invalidated(outcome(o(4)),player_must_do)
invalidated(outcome(o(4)),player_will_attempt)
invalidated(outcome(o(4)),player_will_avoid)
invalidated(outcome(o(4)),undetermined)
invalidated(outcome(o(5)),player_might_attempt)
invalidated(outcome(o(5)),player_will_attempt)
invalidated(outcome(o(5)),player_will_avoid)
invalidated(outcome(o(5)),undetermined)
invalidated(outcome(orbit_the_cursor(entity(e(1)))),player_might_attempt)
invalidated(outcome(orbit_the_cursor(entity(e(1)))),player_will_attempt)
invalidated(outcome(orbit_the_cursor(entity(e(1)))),player_will_avoid)
invalidated(outcome(orbit_the_cursor(entity(e(1)))),undetermined)
invalidated(tick,player_might_attempt)
invalidated(tick,player_must_do)
invalidated(tick,player_will_attempt)
invalidated(tick,player_will_avoid)
invalidated(tick,undetermined)
keyboard(down_arrow)
keyboard(left_arrow)
keyboard(right_arrow)
keyboard(space)
keyboard(up_arrow)
label(entity(e(1)),e(1))
label(entity(e(2)),e(2))
left_right(left)
left_right(right)
location(0,0)
location(0,-1)
location(0,1)
location(-1,0)
location(1,0)
location(-1,-1)
location(-1,1)
location(1,-1)
location(1,1)
look_criterion(furthest)
look_criterion(nearest)
look_criterion(random)
many(entity(e(1)))
many(entity(e(2)))
max_entity(2)
max_outcome(5)
max_timer(1)
Model:
Models
modes(game_loss)
modes(game_win)
modes(narrative_gating)
modes(narrative_progress)
monotonic(orange)
monotonic(orange,decrease)
movement(move(entity(e(1)),direction(right)))
moves(entity(e(1)))
moves(entity(e(2)))
moving(entity(e(1)))
moving(entity(e(2)))
non_monotonic(entity(e(1)))
non_monotonic(entity(e(2)))
not_every_frame(outcome(o(1)))
not_every_frame(outcome(o(2)))
not_every_frame(outcome(o(4)))
number(1)
number_to_place(entity(e(1)),1)
number_to_place(entity(e(2)),1)
only_one_precondition(outcome(o(2)))
only_one_precondition(outcome(o(3)))
only_one_precondition(outcome(o(4)))
only_one_precondition(outcome(orbit_the_cursor(entity(e(1)))))
only_one_precondition(tick)
opposed(bad,decrease,bad,increase)
opposed(bad,decrease,good,decrease)
opposed(bad,increase,bad,decrease)
opposed(bad,increase,good,increase)
opposed(good,decrease,bad,decrease)
opposed(good,decrease,good,increase)
opposed(good,increase,bad,increase)
opposed(good,increase,good,decrease)
opposite(cw,ccw)
opposite(forward,backward)
opposite(left,right)
opposite(north,south)
opposite(up,down)
outcome(outcome(o(1)))
outcome(outcome(o(2)))
outcome(outcome(o(3)))
outcome(outcome(o(4)))
outcome(outcome(o(5)))
outcome(outcome(orbit_the_cursor(entity(e(1)))))
outcome(tick)
overlaps(2)
over_time(decrease,property(entity(e(1)),health))
over_time(decrease,property(entity(e(2)),health))
over_time(outcome(o(4)))
over_time(tick)
palette(orange)
place(entity(e(1)))
place(entity(e(2)))
place(location(0,0))
place(location(0,-1))
place(location(0,1))
place(location(-1,0))
place(location(1,0))
place(location(-1,-1))
place(location(-1,1))
place(location(1,-1))
place(location(1,1))
playerControls
player_controls(entity(e(1)))
player_controls(entity(e(2)))
player_controls_outcome(outcome(o(1)))
player_controls_outcome(outcome(o(2)))
player_controls_outcome(outcome(o(5)))
player_controls_outcome(outcome(orbit_the_cursor(entity(e(1)))))
player_model(outcome(o(1)),player_must_do)
player_model(outcome(o(2)),player_must_do)
player_model(outcome(o(3)),must_happen)
player_model(outcome(o(4)),must_happen)
player_model(outcome(o(5)),player_must_do)
player_model(outcome(orbit_the_cursor(entity(e(1)))),player_must_do)
player_model(tick,must_happen)
polarity(false)
polarity(true)
pool(entity(e(1)),location(bottom,left),ordered,random)
pool(entity(e(1)),location(bottom,right),ordered,random)
pool(entity(e(1)),location(top,left),ordered,random)
pool(entity(e(1)),location(top,right),ordered,random)
pool(entity(e(2)),location(middle,center),ordered,ordered)
precondition(compare(le,amount(orange)),outcome(o(1)))
precondition(compare(le,amount(orange)),outcome(o(3)))
precondition(control_event(button(mouse,held)),outcome(orbit_the_cursor(entity(e(1)))))
precondition(control_event(click(entity(e(1)))),outcome(o(2)))
precondition(overlaps(entity(e(1)),entity(e(2)),true),outcome(o(1)))
precondition(overlaps(entity(e(1))),outcome(o(1)))
precondition(overlaps(entity(e(2)),entity(e(2)),true),outcome(o(5)))
precondition(overlaps(entity(e(2))),outcome(o(1)))
precondition(overlaps(entity(e(2))),outcome(o(5)))
precondition(tick,tick)
precondition(timer_elapsed(t(1)),outcome(o(4)))
priority(must_happen,player_might_attempt)
priority(must_happen,player_must_do)
priority(must_happen,player_will_attempt)
priority(must_happen,player_will_avoid)
priority(must_happen,undetermined)
priority(player_might_attempt,undetermined)
priority(player_must_do,player_might_attempt)
priority(player_must_do,player_will_attempt)
priority(player_must_do,player_will_avoid)
priority(player_must_do,undetermined)
priority(player_will_attempt,player_might_attempt)
priority(player_will_attempt,player_will_avoid)
priority(player_will_attempt,undetermined)
priority(player_will_avoid,player_might_attempt)
priority(player_will_avoid,undetermined)
project(controlScheme(click_and_drag))
project(controlScheme(orbit_the_cursor))
project(entity(e(1)))
project(entity(e(2)))
project(initialize(add(entity(e(1)),scalar(1),location(bottom,left))))
project(player_controls(entity(e(1))))
project(player_controls(entity(e(2))))
project(t(1))
properties(health)
pruned_aciton(move(entity(e(1)),direction(right)))
pruned_action(add(entity(e(1)),pool(entity(e(1)))))
pruned_action(add(entity(e(2)),pool(entity(e(2)))))
pruned_action(delete(entity(e(1))))
pruned_action(delete(entity(e(2))))
pruned_action(look_at(entity(e(1)),cursor,nearest))
pruned_action(modify(decrease,property(entity(e(1)),health)))
pruned_action(modify(decrease,property(entity(e(2)),health)))
reachableCondition(collide(entity(e(1)),entity(e(2))))
reachableCondition(collide(entity(e(2)),entity(e(2))))
reachableCondition(compare(le,amount(orange)))
reachableCondition(compare(le,property(entity(e(1)),health)))
reachableCondition(compare(le,property(entity(e(2)),health)))
reachableCondition(control_event(button(mouse,held)))
reachableCondition(control_event(click(entity(e(1)))))
reachableCondition(overlaps(entity(e(1))))
reachableCondition(overlaps(entity(e(1)),entity(e(2)),true))
reachableCondition(overlaps(entity(e(2))))
reachableCondition(overlaps(entity(e(2)),entity(e(2)),true))
reachableCondition(tick)
reachableCondition(timer_elapsed(t(1)))
reachableOutcome(outcome(o(1)))
reachableOutcome(outcome(o(2)))
reachableOutcome(outcome(o(3)))
reachableOutcome(outcome(o(4)))
reachableOutcome(outcome(o(5)))
reachableOutcome(outcome(orbit_the_cursor(entity(e(1)))))
reachableOutcome(tick)
Reading
reading_about(5)
reading_about(entity(e(1)))
reading_about(entity(e(2)))
reading_about(player)
reading_about(property(entity(e(1)),health))
reading_about(property(entity(e(2)),health))
reading_about(relation(entity(e(1)),entity(e(2))))
reading_about(relation(entity(e(1)),player))
reading_about(relation(entity(e(1)),property(entity(e(1)),health)))
reading_about(relation(entity(e(1)),property(entity(e(2)),health)))
reading_about(relation(entity(e(2)),property(entity(e(1)),health)))
reading_about(scalar(1))
reading(consts,relation(entity(e(1)),property(entity(e(2)),health)))
reading(consumes,relation(entity(e(1)),property(entity(e(1)),health)))
reading(consumes,relation(entity(e(2)),property(entity(e(1)),health)))
reading(costs,relation(entity(e(1)),property(entity(e(2)),health)))
reading(defend_against,entity(e(1)))
reading(difficulty,5)
reading(difficulty,scalar(1))
reading(hurt,relation(entity(e(1)),entity(e(2))))
reading(hurt,relation(entity(e(1)),player))
readings(10)
reading(survive,entity(e(1)))
replace(result(outcome(orbit_the_cursor(entity(e(1)))),move(entity(e(1)),direction(right))),result(outcome(orbit_the_cursor(entity(e(1)))),moves(entity(e(1)),right,scalar(5))))
required(bad)
required(entity(e(1)))
required(entity(e(2)))
required(goal(produce))
required(goal(reduce))
required(good)
required(tradeoff)
result(outcome(o(1)),add(entity(e(1)),scalar(1),pool(entity(e(1)))))
result(outcome(o(1)),delete(entity(e(2))))
result(outcome(o(1)),modify(decrease,property(entity(e(1)),health)))
result(outcome(o(2)),add(entity(e(2)),scalar(1),pool(entity(e(2)))))
result(outcome(o(2)),delete(entity(e(1))))
result(outcome(o(3)),clear(entity(e(1))))
result(outcome(o(4)),add(entity(e(1)),scalar(1),pool(entity(e(1)))))
result(outcome(o(4)),modify(decrease,property(entity(e(1)),health)))
result(outcome(o(4)),modify(decrease,property(entity(e(2)),health)))
result(outcome(o(5)),clear(entity(e(1))))
result(outcome(orbit_the_cursor(entity(e(1)))),look_at(entity(e(1)),cursor,nearest))
result(outcome(orbit_the_cursor(entity(e(1)))),move(entity(e(1)),direction(right)))
result(tick,apply_restitution(entity(e(1)),entity(e(1))))
result(tick,apply_restitution(entity(e(2)),entity(e(2))))
row(bottom)
row(middle)
row(top)
same_movement(entity(e(1)),entity(e(1)))
same_movement(entity(e(2)),entity(e(2)))
SATISFIABLE
satisfies(ge,increase)
satisfies(le,decrease)
simple(entity(e(1)))
simple(entity(e(2)))
(Solving:
Solving...
spatial_condition(entity(e(1)),entity(e(2)))
spatial_condition(entity(e(2)),entity(e(1)))
spatial_condition(entity(e(2)),entity(e(2)))
spawn_types(ordered)
spawn_types(random)
speed(entity(e(1)),outcome(orbit_the_cursor(entity(e(1)))),5)
speed_values(3)
speed_values(5)
speed_values(7)
sprite(circle)
standard_outcome(outcome(o(1)))
standard_outcome(outcome(o(2)))
standard_outcome(outcome(o(3)))
standard_outcome(outcome(o(4)))
standard_outcome(outcome(o(5)))
structure(dot,entity(e(2)))
structure(square,entity(e(1)))
super_trivial(outcome(o(2)))
super_trivial(outcome(o(4)))
super_trivial(outcome(orbit_the_cursor(entity(e(1)))))
super_trivial(tick)
Time
Time
timer_logic(timer(t(1)),scalar(7),loop)
timer(t(1))
timer_values(3)
timer_values(5)
timer_values(7)
total_count(entity(e(1)),4)
total_count(entity(e(2)),1)
trivial(outcome(o(2)))
trivial(outcome(o(4)))
trivial(outcome(o(5)))
trivial(outcome(orbit_the_cursor(entity(e(1)))))
trivial_resource(decrease,property(entity(e(1)),health))
trivial_resource(decrease,property(entity(e(2)),health))
trivial(tick)
Unsat:
uses_color
uses_color(orange)
version
