%% This version is probably too complex to do procedural reasoning over.

destination : type.
possible destination : bwd.
available destination : pred.

nat : type.
z : nat.
s nat : nat.

itinerary_node nat destination : pred.

money : pred.
choosing nat : pred.

stage build_itinerary = {

add_dest : 
  choosing Index * available Dest * money
  -o itinerary_node Index Dest
      * choosing (s Index).

unadd_dest :
  choosing (s I) * itinerary_node I Dest
  -o available Dest * choosing I.

generate_dest :
  $choosing L * possible Dest -o available Dest.

ungen_dest :
  $choosing L * available Dest -o ().

done : choosing _ -o ().

} #interactive build_itinerary.

qui * stage build_itinerary -o stage take_trip.

prestige destination nat : bwd.
gen_fame nat : pred.
gen_carbon : pred.
fame : pred.
carbon : pred.

stage take_trip = {

go : itinerary_node N D
    * prestige D Prestige
    -o gen_fame Prestige * gen_carbon.

gen_fame/z :
  gen_fame z -o ().

gen_fame/s :
  gen_fame (s N) -o fame * gen_fame N.

% Always generate at least 1 carbon.
gen_carbon/stop :
  gen_carbon -o carbon.

gen_carbon/more :
  gen_carbon -o carbon * gen_carbon.

}

qui * stage take_trip
  -o stage build_itinerary * choosing z.

paris : destination.      possible paris.
berlin : destination.     possible berlin.
prague : destination.     possible prague.
amsterdam : destination.  possible amsterdam.
madrid : destination.     possible madrid.
turkey : destination.     possible turkey.

prestige paris (s (s (s z))).
prestige berlin (s (s z)).
prestige prague (s z).
prestige amsterdam (s z).
prestige madrid (s (s z)).
prestige turkey (s z).

context init = {
money, money, money, money, money, money, 
choosing z
}.


#trace _ build_itinerary init.
