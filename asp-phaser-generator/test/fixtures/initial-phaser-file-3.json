[
  {
    "l":["prog"],
    "relation": "is_a",
    "r":["program"],
    "preload": {"images":[]},
    "create":{"vars":[],"sprites":[],"listeners":[],"buttons":[],"motion":[]},
    "update":{"vars":[],"functions":[],"outcomes":[],"motion":[],"misc":[]},
    "render":{}
  },
  {
    "l":["variables"],
    "relation":"is_a",
    "r":["variable"],
    "value":{"confidence":5,"optimism":2,"difficulty":3}
  },
  {
    "l":["gridSize"],
    "relation":"is_a",
    "r":["variable"],
    "value":30
  },
  {
    "l":["gridLinesHorizontal"],
    "relation":"is_a",
    "r":["variable"],
    "value":"Math.floor((game.width-1)/gridSize)"
  },
  {
    "l":["gridLinesVertical"],
    "relation":"is_a",
    "r":["variable"],
    "value":"Math.floor((game.height-1)/gridSize)"
  },
  {
    "l":["grid"],
    "relation":"is_a",
    "r":["variable"],
    "value":"initGrid()"
  },
  {
    "l":["gridIdx"],
    "relation":"is_a",
    "r":["variable"],
    "value":0
  },
  {
    "l":["addedEntities"],
    "relation":"is_a",
    "r":["variable"],
    "value":["{}"]
  },
  {
    "l":["low"],
    "relation":"is_a",
    "r":["variable"],
    "value":1
  },
  {
    "l":["high"],
    "relation":"is_a",
    "r":["variable"],
    "value":10
  },
  {
    "l":["circle"],
    "relation":"is_a",
    "r":["sprite"],
    "image":"circle.png",
    "tags":["randomSprite"],
    "width":40,
    "height":40
  },
  {
    "l":["square"],
    "relation":"is_a",
    "r":["sprite"],
    "image":"square.png",
    "tags":["randomSprite"],
    "width":60,
    "height":60
  },
  {
    "l":["pink_square"],
    "relation":"is_a",
    "r":["sprite"],
    "image":"pink_square.png",
    "width":30,
    "height":30
  },
  {
    "l":["glowing_unicorn"],
    "relation":"is_a",
    "r":["sprite"],
    "image":"glowing_unicorn.png",
    "width":130,
    "height":100
  },
  {
    "l":["pineapple"],
    "relation":"is_a",
    "r":["sprite"],
    "image":"pineapple.png",
    "width":30,
    "height":60
  },
  {
    "l":["center"],
    "relation":"is_a",
    "r":["location"],
    "x":160,
    "y":220
  },
  {
    "l":["setVariable"],
    "relation":"is_a",
    "r":["function"],
    "params":["varName","value"],
    "lines":["variables[varName]=value;","State.set(varName, value);","StoryAssembler.refreshNarrative();","Display.setAvatar(State);"]
  },
  {
    "l":["getVariable"],
    "relation":"is_a",
    "r":["function"],
    "params":["varName"],
    "lines":["return variables[varName];"]
  },
  {
    "l":["getRandomPoint"],
    "relation":"is_a",
    "r":["function"],
    "params":[],
    "lines":["var x=game.rnd.integerInRange(0,game.world.width-1);","var y=game.rnd.integerInRange(0,game.world.height-1);","return new Phaser.Point(x,y);"]
  },
  {
    "l":["initGrid"],
    "relation":"is_a",
    "r":["function"],
    "params":[],
    "lines":["grid=[];","for(var i=0;i<gridLinesHorizontal;i++){for(var j=0;j<gridLinesVertical;j++){grid.push(new Phaser.Point(i*gridSize,j*gridSize));}}","shuffle(grid);","return grid;"]
  },
  {
    "l":["addAtRandomPoint"],
    "relation":"is_a",
    "r":["function"],
    "params":["sprite"],
    "lines":["var spawned=addAtPos(grid[gridIdx], sprite);","gridIdx++;","if(gridIdx===grid.length){gridIdx=0;shuffle(grid);}","return spawned;"]
  },
  {
    "l":["addAtPos"],
    "relation":"is_a",
    "r":["function"],
    "params":["point","sprite"],
    "lines":["return game.add.sprite(point.x,point.y,sprite);"]
  },
  {
    "l":["shuffle"],
    "relation":"is_a",
    "r":["function"],
    "params":["a"],
    "lines":["var j,x,i;","for(i=a.length;i;i--){j=Math.floor(Math.random()*i);x=a[i-1];a[i-1]=a[j];a[j]=x;}"]
  },
  {
    "l":["move_towards"],
    "relation":"is_a",
    "r":["function"],
    "params":["e","dir"],
    "lines":["e.directionChange = new Phaser.Point(dir.x,dir.y);"]
  },
  {
    "l":["move_away"],
    "relation":"is_a",
    "r":["function"],
    "params":["e","dir"],
    "lines":["e.directionChange = new Phaser.Point(-dir.x,-dir.y);"]
  },
  {
    "l":["move"],
    "relation":"is_a",
    "r":["function"],
    "params":["e","x","y"],
    "lines":["e.directionChange = new Phaser.Point(x,y);"]
  },
  {
    "l":["initEntityProperties"],
    "relation":"is_a",
    "r":["function"],
    "params":["eName"],
    "lines":["game.physics.arcade.enable(addedEntities[eName]);","addedEntities[eName].body.collideWorldBounds = true;","if (!addedEntities[eName].body.velocity.hasOwnProperty('x')){addedEntities[eName].body.velocity.x=0;}","if (!addedEntities[eName].body.velocity.hasOwnProperty('y')){addedEntities[eName].body.velocity.y=0;}","if (!addedEntities[eName].body.hasOwnProperty('angularVelocity')){addedEntities[eName].body.angularVelocity=0;}","if (!addedEntities[eName].hasOwnProperty('directionChange')){addedEntities[eName].directionChange=new Phaser.Point(0,0);}","addedEntities[eName].scale.setTo(0.2,0.2);"]
  },
  {
    "l":["changeMode"],
    "relation":"is_a",
    "r":["function"],
    "params":["newMode"],
    "lines":["if(newMode==='game_win'){mode = 'win'; game.world.removeAll(); displayText('CLEARED');}","else if(newMode==='game_loss'){mode='loss'; game.world.removeAll(); displayText('GAME OVER');}"]
  },
  {
    "l":["displayText"],
    "relation":"is_a",
    "r":["function"],
    "params":["t"],
    "lines":["var style = { font: 'bold 32px Arial', fill: '#fff', boundsAlignH: 'center', boundsAlignV: 'middle'};","text = game.add.text(0, 0, t, style);"]
  }
]
